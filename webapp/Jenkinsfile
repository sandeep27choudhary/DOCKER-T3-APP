// CODE_CHANGES = getGitChanges()
pipeline {
  
  agent any
  // tools {
  //   //tools we want to use
  // }

  parameters {
    // - Type(name,dafaultValue,description) eg: string(), choice(),booleanParam()
    // string(name: 'VERSION', defaultValue: '', description: 'version to deploy')
    choice(name: 'VERSION', choices: ['1.1.0', '1.2.0'], description: '')
    booleanParam(name: 'executeTests', defaultValue: true, description: '')

  }
  environment {
    //define env variables here
    NEW_VERSION = '1.2.0'
  }
  
  stages {
    
    stage("build") {
      
      steps {
        // script {
        //   //scripts here
        // }
        echo 'building the application...'
        echo "building version ${NEW_VERSION}"
        sh 'docker build -t sancho27/webapp:1.0 ./webapp/'
      }
    }
    
    stage("test") {
      // when {
      //   expression {
      //     //boolean expression
      //     CODE_CHANGEs == true
      //   }
      // }

      when {
        expression{
          params.executeTests == true
        }
      }
      steps {
        echo 'building the application...'

      }
    }
    
    stage("deploy") {
      
      steps {
        echo 'building the application...'
        echo " deploying version: ${params.VERSION}"
        sh 'docker-compose up -f ./../docker-compose.yaml'
      }
    }
  }
  post {
    always {
      echo 'pipeline configured'
      //
    }
    failure {
      echo 'pipeline failed'
    
      //
    }
  }
  
}
