// CODE_CHANGES = getGitChanges()
def gv
pipeline {
  
  agent any
  // tools {
  //   //tools we want to use
  // }

  parameters {
    // - Type(name,dafaultValue,description) eg: string(), choice(),booleanParam()
    // string(name: 'VERSION', defaultValue: '', description: 'version to deploy')
    choice(name: 'VERSION', choices: ['1.1.0', '1.2.0'], description: '')
    booleanParam(name: 'executeTests', defaultValue: true, description: '')

  }
  environment {
    //define env variables here
    NEW_VERSION = '1.2.0'
  }
  
  stages {

    stage ("init") {
      steps {
        script {
          gv = load "script.groovy"
        }
      }
    }
    
    stage("build") {
      
      steps {
        script {
          //scripts here
          gv.buildApp()
        }
      }
    }
    
    stage("test") {
      // when {
      //   expression {
      //     //boolean expression
      //     CODE_CHANGEs == true
      //   }
      // }

      when {
        expression{
          params.executeTests == true
        }
      }
      steps {

          script {
          //scripts here
            gv.testApp()
        }
      }
    }
    
    stage("deploy") {
      
      steps {

          script {
          //scripts here
            gv.deployApp()
        }
      
      }
    }
  }
  post {
    always {
      echo 'pipeline configured'
      //
    }
    failure {
      echo 'pipeline failed'
    
      //
    }
  }
  
}
